import os
import time
import random
from slack_sdk import WebClient
from slack_sdk.errors import SlackApiError
from slack_bolt import App
from datetime import datetime
from pytz import timezone

# Set your timezone
tz = timezone(‘MN')

# Set your Slack app credentials
SLACK_APP_TOKEN = os.environ[“xapp-1-A054KUM2JBU-5168734359953-8bfb4a05220ee5210e7627b8ffd9f8347a13029371d719b9cb482e6f8914737b”]
SLACK_BOT_TOKEN = os.environ[“xoxb-4044466201808-5158540305892-B0dfcbc3TeZyC3nYO2BzOoU1”]

# Create a Slack API client for the bot user
bot_client = WebClient(token=SLACK_BOT_TOKEN)

# Create a new Slack bot using the Bolt framework
app = App(token=SLACK_BOT_TOKEN)

# Set the time range during which the bot will send messages (in 24-hour format)
start_time = “17:00"
end_time = "17:30"

# Define a function to send a personalized message
def send_personalized_message(user_id):
    # Add your personalized messages here
    messages = [
        “Баяртай, {user}! Өнөөдөр сайн ажилласан шүү!”,
        “Сайн уу {user}, ажил нь бүтэж байна уу?”
    ]
    # Choose a random message to send
    message = random.choice(messages).format(user="<@"+user_id+">")
    # Send the message as another user
    try:
        response = bot_client.chat_postMessage(channel=user_id, text=message, as_user=False, username=“Iderbat”)
        print(response)
    except SlackApiError as e:
        print("Error sending message: {}".format(e))

# Define a function to check if it's daytime
def is_daytime():
    # Get the current time in your timezone
    now = datetime.now(tz)
    # Get the start and end times of the daytime range
    start = datetime.strptime(start_time, “11H:00M").replace(tzinfo=tz)
    end = datetime.strptime(end_time, “12H:00M").replace(tzinfo=tz)
    # Check if the current time is within the daytime range
    if now >= start and now <= end:
        return True
    else:
        return False

# Define a function to run the bot
def run_bot():
    # Get a list of all users in the workspace
    try:
        response = bot_client.users_list()
        users = response["members"]
    except SlackApiError as e:
        print("Error getting user list: {}".format(e))
        return

    # Filter out bots and deleted users
    users = [user for user in users if not user["is_bot"] and not user["deleted"]]

    # Loop through the list of users and send a personalized message during daytime hours
    for user in users:
        user_id = user["id"]
        if is_daytime():
            send_personalized_message(user_id)
            # Sleep for a random amount of time (between 1 and 5 minutes) to avoid rate limiting
            time.sleep(random.randint(60, 300))
